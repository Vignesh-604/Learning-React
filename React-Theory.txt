React: Easy to build and manage complex frontends
Created to fix the Phantom Message problem (at facebook)
-- Library

*** Creating a react project --- Ctrl + c to stop a project ***

npx create-react-app : creates a react app folder with all dependencies (bulky, time consuming)
npm run start : starts the react app on local machine
npm run build : creates a build folder with static temp folders (used in production)
App running on port 3000 --> http://localhost:3000

Deleting unwanted files:
setupTest.js
reportWebVitals.js
logo.svg --> the react logo
index.css --> css file for your project
App.css
App.test.js

Remove all import statements to respective files


*** Using Vite to create a React app: ***

npm create vite@latest       # download latest Library
-- enter project name --
-- select framework/library --
-- selectvariant (language) --
cd app-name
npm install         # download dependencies like node modules folder

npm run dev         # Run vite react app
App running on port 5137 : http://localhost:5173/

Deleting unwanted files:
assets folder --> contains logo
App.css
index.css
remove all import statements from App.jsx

*** Understanding file system: ***

node_modules : Contains all dependencies mentioned in package.json

.gitignore : Mentions which files to ignore while pushing to github

public/manifest.json : provides metadata used when your web app is installed on a user's mobile device or desktop.

index.html :
-- File which opens in browser. 
-- Single page application (SPA)
-- Javascript injects code into this (DOM manipulation)

src/index.js :
--  Contains import statements for React core library and Web library
-- Creates a virtual DOM to manipulate a tag in index.html
-- Imports code from App.js

src/App.js : JS file that returns a function containing HTML code

// index.html, index.js and App.js are connected via react-scripts mentioned in package.json

Similar in vite as well - Although vite only accepts jsx files to store components but create-react-app can have both js/jsx

*** Component files: ***
-- Files containing components like App.jsx (js) file must have their function name first letter capital

Problem with component files: can only return one component or tag
So no 2 tags (or custom tags be in same fucntion)
To fix this, enclose the rest of the components in div tag or empty tag
-- empty tag is called a fragment <> </>

JSX = JS + HTML

*** Virtual DOM ***
ReactDOM.createRoot() : creates a virtual DOM - a DOM similar to that of normal DOM but keeps of track of changes and updates it instead of reloading the whole page
The algorithm behind this is called as reconcilliation. It compares the DOM and React DOM after changes (from setState) and updates the new changes instead of whole DOM
Fibre is the new ground-up version of reconciller.

Add tailwind by following guidelines at https://tailwindcss.com/docs/installation/framework-guides


** Script to make vite react project with tailwind **
npm create vite@latest my-project -- --template react
cd my-project

npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p

// in tailwind.config.js
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],

// in index.css
@tailwind base;
@tailwind components;
@tailwind utilities;


*** React Router ***
React Router enables "client side routing".
Client side routing allows your app to update the URL from a link click without making another request for another document from the server. 
Basically, it enables SPA (Single page application) by loading different page components in a single URL by updating the DOM.

*** Redux Toolkit ***
npm install @reduxjs/toolkit
npm install react-redux